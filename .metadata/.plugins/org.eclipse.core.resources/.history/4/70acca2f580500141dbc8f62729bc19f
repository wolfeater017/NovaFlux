package Graphic;

import java.awt.Rectangle;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.regex.Pattern;


import tools.Path;
import tools.Thing;

public abstract class TextMap {
	
	protected ArrayList<Thing> things = new ArrayList<Thing>();
	protected static int GRIDCONSTANT = 32;
	
	public TextMap(File TextFile){
		
		try {
			Scanner read = new Scanner(TextFile);
			while(read.hasNextLine() ){//each line is an object to be added to things
				
				String ID;
				int x,y;
				boolean visibility;
				ArrayList<Object> obj = new ArrayList<Object>();
				
				String line = read.nextLine();
				String[] tokens = line.split(Pattern.quote(" ") );
				ID = tokens[0];
				x = Integer.parseInt( tokens[1] );
				y = Integer.parseInt( tokens[2] );
				
				if(tokens[3].equalsIgnoreCase("true") )
					visibility = true;
				else
					visibility = false;
				
				
				for(int bbb = 4; bbb<tokens.length; bbb++){
					obj.add( AdditionalObjectHandler( tokens[bbb] ) );
				}
				
				Object[] temp = new Object[obj.size()];
				for(int bbb = 0; bbb<temp.length; bbb++)
					temp[bbb] = obj.get(bbb);
				
				things.add( IDAssignor(ID, x*GRIDCONSTANT, y*GRIDCONSTANT, visibility, temp) );
				
			}
			
			
			read.close();
			
		} catch (FileNotFoundException e) {
			System.out.println("Scanner could not Locate File");
			e.printStackTrace();
		}
	}
	
	protected abstract Thing IDAssignor(String ID,int x, int y,boolean visibility, Object[] objs);
	
	public static Object AdditionalObjectHandler(String token){
		
		if(token.startsWith(Reference.ID.PATH.toString() ) )
			return (Object)new Path(token);
		else if(token.startsWith(Reference.ID.RECTANGLE.toString() ) ){
			String[] data = token.split(Pattern.quote("/") );
			int x = Integer.parseInt(data[1]);
			int y = Integer.parseInt(data[2]);
			int width = Integer.parseInt(data[3]);
			int height = Integer.parseInt(data[4]);
			return (Object)new Rectangle(x, y,width,height);
		}
		else
			return (Object)null;
	}
}
